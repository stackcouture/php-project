version: '3.8'

services:
  web:
    build: .
    container_name: ${APP_NAME:-php-app}    # fallback app name if not set
    ports:
      - "${APP_PORT:-8080}:8080"             # fallback port 8080 if not set
    volumes:
      - ./src:/var/www/html                   # better to mount only your src folder, not whole project root
      - ./composer.json:/var/www/html/composer.json:ro
    depends_on:
      - db
    networks:
      - app-network
    environment:
      DB_HOST: db
      AWS_REGION: ap-south-1
      AWS_SECRET_NAME: myapp/db_my_creds
    restart: unless-stopped

  db:
    image: mysql:5.7
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: db_shop
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpass
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"          # default phpmyadmin port 8081 fallback
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: rootpass
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge
